
import os
import psycopg2
import psycopg2.extras
import tabulate
from dotenv import load_dotenv
from helper import inputHandler, createMFStructEntry, lookup
# DO NOT EDIT THIS FILE, IT IS GENERATED BY generator.py

def query():
    load_dotenv()

    user = os.getenv('DB_USER')
    password = os.getenv('DB_PASSWORD')
    dbname = os.getenv('DB_NAME')

    conn = psycopg2.connect(
    dbname=dbname, user=user, password=password, host="localhost", port=5433, cursor_factory=psycopg2.extras.DictCursor)
    
    cur = conn.cursor()
    cur.execute("SELECT * FROM sales")
    
    _global = []
    
    phi = inputHandler()

    MF_Struct = []

    for row in cur:
        #create a tuple of current rows grouping attribute values
        grouping_key = tuple(row[attr] for attr in phi['v'])

        #search MF_Struct to see if grouping_key already exists
        search = lookup(MF_Struct, phi['v'], grouping_key)

        if search == -1:
            new_entry = createMFStructEntry(phi, row)
            MF_Struct.append(new_entry)
            # _global.append(row)
        
    print(MF_Struct)
    
    
    return tabulate.tabulate(_global,
                        headers="keys", tablefmt="psql")

def main():
    print(query())
    
if "__main__" == __name__:
    main()
    